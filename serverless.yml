# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: simplecron
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
  stage: dev
  region: us-east-1

  environment:
      DYNAMODB_TABLE:  JobsTable
      JOBS_TOPIC_ARN:
        Fn::Join: ["", [ "arn:aws:sns:", { "Ref": "AWS::Region" }, ":", { Ref: "AWS::AccountId" }, ":JobsTopic" ]]

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
       - Effect: "Allow"
         Action:
          - dynamodb:DescribeStream
          - dynamodb:GetRecords
          - dynamodb:GetShardIterator
          - dynamodb:ListStreams
         Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
       - Effect: 'Allow'
         Action:
          - "sns:Publish"
         Resource:
           Fn::Join:
            - ''
            - - '${self:provider.environment.JOBS_TOPIC_ARN}'
       - Effect: "Allow"
         Action:
          - events:PutRule
          - events:PutTargets
          - events:RemoveTargets
          - events:DeleteRule
         Resource:
           Fn::Join: ["", [ "arn:aws:events:", { "Ref": "AWS::Region" }, ":", { Ref: "AWS::AccountId" }, ":rule/*" ]]
functions:
  syncDataSource:
    handler: handler.syncDataSource
    events:
       - sns:
          arn:
            Ref: JobsTopic
          topicName: JobsTopic

  watchCronJobs:
    handler: handler.watchCronJobs
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - JobsTable
              - StreamArn

# you can add CloudFormation resource templates here
resources:
  Resources:
    JobsTable:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: JobsTable
            AttributeDefinitions:
              - AttributeName: leadSourceId
                AttributeType: S
            KeySchema:
              - AttributeName: leadSourceId
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            StreamSpecification:
              StreamViewType: NEW_AND_OLD_IMAGES
    JobsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: JobsTopic
    SnsTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: SnsTopicPolicy
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sns:Publish
            Resource: "*"
        Topics:
          - Ref: JobsTopic
